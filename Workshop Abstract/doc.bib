

@inCollection{collusion17,
author = {Asavoae, M and Blasco, J and  Chen, T M and    Kalutarage, H and
       Muttik, I and Nguyen,  H N and  
 Roggenbach, M and Shaikh,  S A },
title =  {Detecting Malicious Collusion Between
   Mobile Software Applications: The {A}ndroid Case},
booktitle =  {Data Analytics
 and Decision Support for Cybersecurity},
year =  {2017},
publisher = {Springer},
}

@misc{LeFort2020,
title = {McAfee Mobile Threat Report},
note = {\url{https://www.mcafee.com/content/dam/consumer/en-us/docs/2020-Mobile-Threat-Report.pdf}},
year = 2020,
}

@inproceedings{bauer2012runtime,
	title={Runtime verification meets {A}ndroid security},
	author={Bauer, Andreas and K{\"u}ster, Jan-Christoph and Vegliach, Gil},
	booktitle={NASA Formal Methods Symposium},
	pages={174--180},
	year={2012},
	organization={Springer}
}

@article{PrologAppCollusion,
	author = {Blasco, Jorge and Chen, Thomas and Muttik, Igor and Roggenbach, Markus},
	year = {2017},
	month = {06},
	pages = {},
	title = {Detection of App Collusion Potential Using Logic Programming},
	volume = {105},
	journal = {Journal of Network and Computer Applications},
	doi = {10.1016/j.jnca.2017.12.008}
}

@techreport{RosuHavelund,
	author = {Rosu, Grigore and Havelund, Klaus},
	title = {Synthesizing Dynamic Programming Algorithms from Linear Temporal Logic Formulae},
	year = {2001},
	publisher = {RIACS},
	abstract = {The problem of testing a linear temporal logic (LTL) formula on a finite execution trace of events, generated by an executing program, occurs naturally in runtime analysis of software. We present an algorithm which takes an LTL formula and generates an efficient dynamic programming algorithm. The generated algorithm tests whether the LTL formula is satisfied by a finite trace of events given as input. The generated algorithm runs in linear time, its constant depending on the size of the LTL formula. The memory needed is constant, also depending on the size of the formula.}
}

@misc{Xposed,
author = {rovo89},
title = {Xposed Framework},
year = {2021 (accessed March 15, 2021)}, 
howpublished = "\url{https://www.xda-developers.com/xposed-framework-hub/}"}

