Supervisor Meeting 2

Date 22/10/2019 - 16:10 - 17:30

Attendees
Richard Allen (Myself)
Markus Roggenbach


Discussed
.  We talked about how to share docs between ourselves.  Need to talk to the technician Damien Theobald and ask for access to CSMarkus SVN repository.  Make a folder in there with my name.  In the folder I choose the structure and put files to share in that.

.  Arno's meeting tomorrow

.  I gave a presentation on what I have read so far from the paper on Runtime Verification (RV).  Learned what the language problem is and the word problem.  Both from the 1960's but used to describe model checking (language problem) and runtime verification (word problem).

Difference is that language problem is deciding if the language a model produces is one of the accepted languages according to a spec.  Does L(m) = L?  The language of the machine (in 1960 terminology) = another language.  In our case the language of the model = a language that is correct.
The word problem is whether a word generated by execution is in the language of the model/machine or accepted language.  w member of L(m).
This is because model checking is testing the entire capacity of the model (the whole language) while runtime verification is checking individual executions (words).

Talked about the effort to generate an online monitor is trivial because it is done once but the execution of the monitor is not trivial because it must not adversely impact the system under test.  I suggested the monitor can be broken into two halves, logging and analysis of the log.  Analysis can be done on seperate hardware.  Markus says that is ok but some people act upon the analysis and stop the process if it is seen to have failed.  The analysis must be in real-time.  I had not considered this use because it is more than testing.  It is then a control system.  Similar to NASA shutting down the nav system when there is an exception so that corrupt memory does not get used in a calculation and navigate you incorrectly.

.  Markus gave his understanding of my idea so far.  He described the objective of testing is to say if an implementation conforms to a specification.  To do that there is a test suite T that is used to check conformance.  That test suite must be generated.  So there is a test generation problem.  There is lots of literature on this subject and my project is in this field.

idea is to solve the test generation problem

rational is that we are running those tasks that actially appear in real system runs.

we have to be able to say why this technique is worthwhile.

.  Markus suggested a concrete application of the idea that could be monitoring of android apps to check if the app uses a restricted resource such as the GPS, or opens the microphone and records or the camera etc.

.  I suggested at the end that another application related to security is where an attacker has breached security.  In this case by definition there was no test for whatever the attack did.  If there were then the security hole would have been found and plugged.  So an application is to record user activity so that in the event of a security breach the method can be discovered by replaying the activities.

TODO
.  Read more runtime verification + chapter
.  Talk more about RV
.  Discuss android project next week
.  Get SVN access - DONE

  

